---

- name: Install wireguard
  apt:
    name:
      - wireguard-tools
      - qrencode
    state: latest
    update_cache: yes
    cache_valid_time: 600
  notify:
    - Restart wireguard

- name: Check if configuration exists
  stat:
    path: /etc/wireguard/wg0.conf
  register:
    wg_conf

- name: Generate the server key
  shell:
    cmd: |
      umask 0077

      /usr/bin/mkdir -p /etc/wireguard/keys

      /usr/bin/wg genkey \
        | tee /etc/wireguard/keys/wg0_private.key \
        | /usr/bin/wg pubkey \
        > /etc/wireguard/keys/wg0_public.key

      umask 0022
  when: wg_conf is not defined or not wg_conf.stat.exists

# Needed for the server config template.
- name: Register the server key
  command:
    cmd: /usr/bin/cat /etc/wireguard/keys/wg0_private.key
  register: vpn_private_key
  when: wg_conf is not defined or not wg_conf.stat.exists

- name: Copy the wireguard config
  template:
    src: wg.conf.j2
    dest: /etc/wireguard/wg0.conf
    owner: root
    group: root
    mode: 0600
  when: wg_conf is not defined or not wg_conf.stat.exists

- name: Copy the add-peer script
  copy:
    src: add-peer
    dest: /usr/local/bin/add-peer
    owner: root
    group: root
    mode: 0700

- name: Enable the wireguard service
  systemd:
    name: wg-quick@wg0.service
    enabled: yes
    state: started

- name: Create a peer
  shell:
    cmd: |
      endpoint=$(/usr/sbin/ip -4 addr show dev {{ wan_interface | quote }} \
        | /usr/bin/awk '/inet/ {print $2}' \
        | /usr/bin/cut -d/ -f1)

      /usr/local/bin/add-peer \
        -n First \
        -4 {{ vpn_client_ipv4 | quote }} \
        -6 {{ vpn_client_ipv6 | quote }} \
        -e "$endpoint":{{ vpn_port | quote }} \
        -c /etc/wireguard/wg0.conf \
        -t access \
        > /etc/wireguard/peer.conf
  when: wg_conf is not defined or not wg_conf.stat.exists
  notify:
    - Reload wireguard

- name: Fetch the peer config
  fetch:
    src: /etc/wireguard/peer.conf
    dest: "{{ ansible_ssh_host }}/peer.conf"
    flat: yes
  when: wg_conf is not defined or not wg_conf.stat.exists

- name: Remove the peer config
  file:
    path: /etc/wireguard/peer.conf
    state: absent
  when: wg_conf is not defined or not wg_conf.stat.exists

- name: Enable IP forwarding
  vars:
    sysctl_config:
      net.ipv4.ip_forward: 1
      net.ipv6.conf.all.forwarding: 1
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    sysctl_set: yes
    reload: yes
  loop: "{{ sysctl_config | dict2items }}"

- name: Ensure the sshd service directory exists
  file:
    # Debian-based systems name the sshd service directory 'ssh.service.d'.
    path: /etc/systemd/system/ssh.service.d
    state: directory
    recurse: yes
    owner: root
    group: root
    mode: 0755

- name: Start sshd after Wireguard
  copy:
    content: |
      [Unit]
      After=
      After=network.target auditd.service wg-quick@wg0.service
      Requires=
      Requires=wg-quick@wg0.service
    dest: /etc/systemd/system/ssh.service.d/override.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - Restart sshd
    - Reload daemons

- name: Remove the generated keys
  file:
    path: /etc/wireguard/keys
    state: absent
  when: wg_conf is not defined or not wg_conf.stat.exists
